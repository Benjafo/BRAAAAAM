"use client";
import * as React from "react";
import { Button } from "@/components/ui/button";
import {
    Dialog,
    DialogContent,
    DialogFooter,
    DialogHeader,
    DialogTitle,
    DialogTrigger,
} from "@/components/ui/dialog";
import { toast } from "sonner";

// types developed by AI
type Warning = {
    type: "conflict" | "availability" | "accommodation";
    message: string;
};

type Ride = {
    id: number;
    passengerName: string;
    date: string;
    startTime: string;
    endTime: string;
    warnings: Warning[];
};

// Sample client data (to be replaced with API data later)
// Data generated by AI
const Rides: Ride[] = [
    {
        id: 1,
        passengerName: "Monet X. C.",
        date: "Tuesday 09/02/25",
        startTime: "10:00 AM",
        endTime: "11:00 AM",
        warnings: [
            {
                type: "conflict",
                message:
                    "You have already been assigned to a ride (Zac O., 09:00 AM - 11:00 AM) during this time.",
            },
        ],
    },
    {
        id: 2,
        passengerName: "John D.",
        date: "Wednesday 09/03/25",
        startTime: "10:30 AM",
        endTime: "11:30 AM",
        warnings: [
            {
                type: "availability",
                message: "This ride falls outside of your listed availability.",
            },
        ],
    },
    {
        id: 3,
        passengerName: "Sarah M.",
        date: "Thursday 09/04/25",
        startTime: "02:00 PM",
        endTime: "03:30 PM",
        warnings: [
            {
                type: "accommodation",
                message:
                    "This ride requires one or more accommodations (oxygen tank, service animal) that you have not listed.",
            },
        ],
    },
    {
        id: 4,
        passengerName: "Michael T.",
        date: "Friday 09/05/25",
        startTime: "09:00 AM",
        endTime: "10:00 AM",
        warnings: [
            {
                type: "availability",
                message: "This ride falls outside of your listed availability.",
            },
        ],
    },
    {
        id: 5,
        passengerName: "Emma L.",
        date: "Monday 09/08/25",
        startTime: "11:00 AM",
        endTime: "12:00 PM",
        warnings: [],
    },
];

export default function AcceptRideModal() {
    const [open, setOpen] = React.useState(false);

    // Change the index to test different warnings: 0, 1, 2, 3, or 4
    // Generated by AI
    const currentRide = Rides[0];

    async function handleSubmit(): Promise<void> {
        // TODO: API logic for accepting values
        toast.success("Ride has been accepted.");
        setOpen(false);
    }

    return (
        <Dialog open={open} onOpenChange={setOpen}>
            <DialogTrigger asChild>
                <Button variant="outline">Accept Ride</Button>
            </DialogTrigger>
            <DialogContent className="!max-w-[480px] max-h-[90vh] overflow-y-auto scroll-smooth p-6">
                <DialogHeader className="mb-4">
                    <DialogTitle>Do you want to accept this ride?</DialogTitle>

                    {/* AI helped develop this */}
                    {currentRide.warnings.length > 0 && (
                        <div className="space-y-2 mt-4">
                            {currentRide.warnings.map((warning, index) => (
                                <p key={index} className="text-left text-base text-gray-600">
                                    <span className="text-gray-600">WARNING:</span>{" "}
                                    {warning.message}
                                </p>
                            ))}
                        </div>
                    )}

                    <p className="text-left text-base text-gray-600 mt-4">
                        {currentRide.passengerName}, {currentRide.date}, {currentRide.startTime} -{" "}
                        {currentRide.endTime}
                    </p>
                </DialogHeader>
                <DialogFooter className="flex flex-row justify-end gap-3 mt-3">
                    <Button type="button" variant="outline" onClick={() => setOpen(false)}>
                        Cancel
                    </Button>
                    <Button type="submit" onClick={handleSubmit}>
                        Accept
                    </Button>
                </DialogFooter>
            </DialogContent>
        </Dialog>
    );
}
